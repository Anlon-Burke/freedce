#ifndef _LIB_SMB_PROTO_H_
#define _LIB_SMB_PROTO_H_
/* This file is automatically generated with "make proto". DO NOT EDIT */

/*The following definitions come from  lib/hmacmd5.c  */

void hmac_md5_init_rfc2104(uchar*  key, int key_len, HMACMD5Context *ctx);
void hmac_md5_init_limK_to_64(const uchar* key, int key_len,
			HMACMD5Context *ctx);
void hmac_md5_update(const uchar* text, int text_len, HMACMD5Context *ctx);
void hmac_md5_final(uchar *digest, HMACMD5Context *ctx);
void hmac_md5( uchar key[16], uchar* data, int data_len, uchar* digest);

/*The following definitions come from  lib/md5.c  */

void MD5Init(struct MD5Context *ctx);
void MD5Update(struct MD5Context *ctx, uchar const *buf, unsigned len);
void MD5Final(uchar digest[16], struct MD5Context *ctx);
void MD5Transform(uint32 buf[4], const uchar inext[64]);


/*The following definitions come from  libsmb/pwd_cache.c  */

void pwd_init(struct pwd_info *pwd);
BOOL pwd_is_nullpwd(const struct pwd_info *pwd);
BOOL pwd_compare(const struct pwd_info *pwd1, const struct pwd_info *pwd2);
void pwd_read(struct pwd_info *pwd, char *passwd_report, BOOL do_encrypt);
void pwd_set_nullpwd(struct pwd_info *pwd);
void pwd_set_cleartext(struct pwd_info *pwd, char *clr);
void pwd_get_cleartext(struct pwd_info *pwd, char *clr);
void pwd_set_lm_nt_16(struct pwd_info *pwd,
		      const uchar lm_pwd[16], const uchar nt_pwd[16]);
void pwd_get_lm_nt_16(const struct pwd_info *pwd, uchar lm_pwd[16],
		      uchar nt_pwd[16]);
void pwd_make_lm_nt_16(struct pwd_info *pwd, char *clr);
void pwd_make_lm_nt_owf2(struct pwd_info *pwd, const uchar srv_key[8],
			 const char *user, const char *server,
			 const char *domain, uchar sess_key[16]);
void pwd_make_lm_nt_owf(struct pwd_info *pwd, uchar cryptkey[8],
			uchar sess_key[16]);
void pwd_get_lm_nt_owf(struct pwd_info *pwd, uchar lm_owf[24],
		       uchar * nt_owf, size_t * nt_owf_len);

/*The following definitions come from  libsmb/smbdes.c  */

void smbhash(uchar *out, const uchar *in, const uchar *key, int forw);
void E_P16(uchar *p14,uchar *p16);
void E_P24(const uchar *p21, const uchar *c8, uchar *p24);
void D_P16(const uchar *p14, const uchar *in, uchar *out);
void E_old_pw_hash( const uchar *p14, const uchar *in, uchar *out);
void cred_hash1(uchar *out, const uchar *in, const uchar *key);
void cred_hash2(uchar *out,uchar *in,uchar *key);
void cred_hash3(uchar *out, const uchar *in,uchar *key, int forw);
void SamOEMhash( uchar *data, const uchar *key, int val);
void sam_pwd_hash(unsigned int rid, const uchar *in, uchar *out, int forw);

/*The following definitions come from  libsmb/smbencrypt.c  */

void SMBencrypt(uchar * pwrd, uchar * c8, uchar * p24);
void SMBOWFencrypt(const uchar pwrd[16], const uchar * c8, uchar p24[24]);
void NTLMSSPOWFencrypt(const uchar pwrd[8], const uchar * ntlmchalresp,
		       uchar p24[24]);
void SMBNTencrypt(uchar * pwrd, uchar * c8, uchar * p24);
BOOL make_oem_passwd_hash(uchar data[516],
			  const char *pwrd, int new_pw_len,
			  const uchar old_pw_hash[16]);
void SMBOWFencrypt_ntv2(const uchar kr[16],
			const uchar * srv_chal, int srv_chal_len,
			const uchar * cli_chal, int cli_chal_len,
			char resp_buf[16]);
void SMBsesskeygen_ntv2(const uchar kr[16],
			const uchar * nt_resp, char sess_key[16]);
void SMBsesskeygen_ntv1(const uchar kr[16],
			const uchar * nt_resp, char sess_key[16]);
void SMBgenclientchals(char *lm_cli_chal,
		       char *nt_cli_chal, int *nt_cli_chal_len,
		       const char *srv, const char *dom);
void ntv2_owf_gen(const uchar owf[16],
		  const char *user_n, const char *domain_n, uchar kr_buf[16]);
void lm_owf_genW(const UNISTR2 *pwd, uchar p16[16]);
void nt_owf_genW(const UNISTR2 *pwd, uchar nt_p16[16]);
void nt_lm_owf_genW(const UNISTR2 *pwd, uchar nt_p16[16], uchar lm_p16[16]);
BOOL nt_encrypt_string2(STRING2 * out, const STRING2 * in, const uchar * key);
BOOL nt_decrypt_string2(STRING2 * out, const STRING2 * in, const uchar * key);
BOOL decode_pw_buffer(const char buffer[516], char *new_pwrd,
		      int new_pwrd_size, uint32 *new_pw_len);
BOOL encode_pw_buffer(char buffer[516], const char *new_pass,
		      int new_pw_len);


/*The following definitions come from  rpc_parse/parse_misc.c  */

BOOL smb_io_time(char *desc, NTTIME *nttime, prs_struct *ps, int depth);
BOOL make_str_hdr(STRHDR *hdr, int max_len, int len, uint32 buffer);
BOOL smb_io_strhdr(char *desc,  STRHDR *hdr, prs_struct *ps, int depth);
BOOL make_strhdr2(STRHDR2 *hdr, uint32 max_len, uint32 len, uint32 buffer);
BOOL smb_io_strhdr2(char *desc, STRHDR2 *hdr, prs_struct *ps, int depth);
BOOL make_uni_hdr(UNIHDR *hdr, int len);
BOOL make_unihdr_from_unistr2(UNIHDR *hdr, const UNISTR2 *str);
BOOL smb_io_unihdr(const char *desc,  UNIHDR *hdr, prs_struct *ps, int depth);
BOOL make_buf_hdr(BUFHDR *hdr, int max_len, int len);
BOOL smb_io_hdrbuf_pre(char *desc, BUFHDR *hdr, prs_struct *ps, int depth, uint32 *offset);
BOOL smb_io_hdrbuf_post(char *desc, BUFHDR *hdr, prs_struct *ps, int depth,
				uint32 ptr_hdrbuf, uint32 max_len, uint32 len);
BOOL smb_io_hdrbuf(char *desc,  BUFHDR *hdr, prs_struct *ps, int depth);
BOOL make_bufhdr2(BUFHDR2 *hdr, uint32 info_level, uint32 length, uint32 buffer);
BOOL smb_io_bufhdr2(char *desc, BUFHDR2 *hdr, prs_struct *ps, int depth);
BOOL make_uni_hdr2(UNIHDR2 *hdr, int len);
BOOL make_unihdr2_from_unistr2(UNIHDR2 *hdr, const UNISTR2 *str);
BOOL smb_io_unihdr2(const char *desc,  UNIHDR2 *hdr2, prs_struct *ps, int depth);
BOOL make_unistr(UNISTR *str, char *buf);
BOOL smb_io_unistr(char *desc,  UNISTR *uni, prs_struct *ps, int depth);
BOOL make_buffer3_uint32(BUFFER3 *str, uint32 val);
BOOL make_buffer3_str(BUFFER3 *str, const char *buf, int len);
BOOL make_buffer3_hex(BUFFER3 *str, char *buf);
BOOL make_buffer3_bytes(BUFFER3 *str, uint8 *buf, int len);
BOOL smb_io_buffer3(char *desc,  BUFFER3 *buf3, prs_struct *ps, int depth);
BOOL make_buffer4_str(BUFFER4 *str, const char *buf, int len);
BOOL smb_io_buffer4(char *desc, BUFFER4 *buf4, uint32 buffer, prs_struct *ps, int depth);
BOOL init_buffer5(BUFFER5 **str);
BOOL clear_buffer5(BUFFER5 **str);
BOOL make_buffer5(BUFFER5 *str, char *buf, int len);
BOOL smb_io_buffer5(char *desc, BUFFER5 *buf5, prs_struct *ps, int depth);
void free_buffer5(BUFFER5 *buf5);
BOOL make_buffer2_multi(BUFFER2 *str, char *const* const buf, uint32 num);
BOOL make_buffer2(BUFFER2 *str, const char *buf, int len);
BOOL smb_io_buffer2(char *desc,  BUFFER2 *buf2, uint32 buffer, prs_struct *ps, int depth);
BOOL make_buf_unistr2(UNISTR2 *str, uint32 *ptr, const char *buf);
BOOL make_string2(STRING2 *str, const char *buf, int len);
BOOL make_buf_string2(STRING2 *str, uint32 *ptr, const char *buf);
BOOL smb_io_string2(char *desc,  STRING2 *str2, uint32 buffer, prs_struct *ps, int depth);
BOOL make_unistr2(UNISTR2 *str, const char *buf, int len);
BOOL smb_io_unistr2(const char *desc, UNISTR2 *uni2, uint32 buffer,
		    prs_struct *ps, int depth);
BOOL smb_io_unistr2_x(const char *name, UNISTR2 *uni2,
		      prs_struct *ps, int flags);
BOOL smb_io_null_x(const char *name, void *foo,
		   prs_struct *ps, int flags);
BOOL smb_io_unistr2_with_hdr(const char *name, UNISTR2 *uni2,
			     prs_struct *ps, int flags);

/*The following definitions come from  rpc_parse/parse_ntlmssp.c  */

BOOL rpc_hdr_ntlmssp_auth_chk(RPC_HDR_AUTH * rai);
BOOL make_rpc_auth_ntlmssp_neg(RPC_AUTH_NTLMSSP_NEG * neg,
			       uint32 neg_flgs,
			       fstring myname, fstring domain);
BOOL smb_io_rpc_auth_ntlmssp_neg(char *desc, RPC_AUTH_NTLMSSP_NEG * neg,
				 prs_struct *ps, int depth);
BOOL make_rpc_auth_ntlmssp_chal(RPC_AUTH_NTLMSSP_CHAL * chl,
				uint32 neg_flags, uint8 challenge[8]);
BOOL smb_io_rpc_auth_ntlmssp_chal(char *desc, RPC_AUTH_NTLMSSP_CHAL * chl,
				  prs_struct *ps, int depth);
void create_ntlmssp_resp(const uchar lm_owf[24], const uchar nt_owf[128],
			 size_t nt_owf_len,
			 const char *domain, const char *user_name,
			 const char *my_name, uint32 ntlmssp_cli_flgs,
			 prs_struct *auth_resp);
BOOL make_rpc_auth_ntlmssp_resp(RPC_AUTH_NTLMSSP_RESP * rsp,
				const uchar lm_resp[24],
				const uchar * nt_resp, size_t nt_len,
				const char *domain, const char *user,
				const char *wks, uint32 neg_flags);
BOOL smb_io_rpc_auth_ntlmssp_resp(char *desc, RPC_AUTH_NTLMSSP_RESP * rsp,
				  prs_struct *ps, int depth);
BOOL rpc_auth_ntlmssp_chk(RPC_AUTH_NTLMSSP_CHK * chk, uint32 crc32,
			  uint32 seq_num);
BOOL make_rpc_auth_ntlmssp_chk(RPC_AUTH_NTLMSSP_CHK * chk,
			       uint32 ver, uint32 crc32, uint32 seq_num);
BOOL smb_io_rpc_auth_ntlmssp_chk(char *desc, RPC_AUTH_NTLMSSP_CHK * chk,
				 prs_struct *ps, int depth);

BOOL make_rpc_auth_verifier(RPC_AUTH_VERIFIER * rav,
			    char *signature, uint32 msg_type);
BOOL smb_io_rpc_auth_verifier(char *desc, RPC_AUTH_VERIFIER * rav,
			      prs_struct * ps, int depth);
BOOL rpc_auth_verifier_chk(RPC_AUTH_VERIFIER * rav,
			   char *signature, uint32 msg_type);

/*The following definitions come from  rpc_parse/parse_prs.c  */

void prs_dump(char *name, int v, prs_struct *ps);
void prs_debug(prs_struct *ps, int depth, const char *desc,
	       const char *fn_name);
void prs_debug_out(const prs_struct *ps, char *msg, int level);
BOOL prs_init(prs_struct *ps, uint32 size, uint8 align, BOOL io);
void prs_set_packtype(prs_struct *ps, const uint8 *pack_type);
void prs_create(prs_struct *ps, char *data, uint32 size,
		uint8 align, BOOL io);
BOOL prs_copy(prs_struct *ps, const prs_struct *from);
BOOL prs_buf_copy(char *copy_into, const prs_struct *buf,
		  uint32 offset, uint32 len);
void prs_struct_free(prs_struct **buf);
void prs_free_data(prs_struct *ps);
BOOL prs_realloc_data(prs_struct *buf, size_t new_size);
BOOL prs_grow_data(prs_struct *buf, BOOL io, int new_size, BOOL force_grow);
uint32 prs_buf_len(const prs_struct *buf);
char *prs_data(const prs_struct *buf, uint32 offset);
void prs_link(prs_struct *prev, prs_struct *ps, prs_struct *next);
BOOL prs_align(prs_struct *ps);
BOOL prs_grow(prs_struct *ps, uint32 new_size);
BOOL prs_append_data(prs_struct *ps, const char *data, int len);
BOOL prs_add_data(prs_struct *ps, const char *data, int len);
void prs_switch_type(prs_struct *ps, BOOL io);
void prs_force_dynamic(prs_struct *ps);
uint32 prs_data_size(prs_struct *ps);
uint32 prs_offset(prs_struct *ps);
BOOL prs_set_offset(prs_struct *ps, uint32 offset);
void prs_set_depth(prs_struct *ps, int depth);
void prs_inc_depth(prs_struct *ps);
void prs_dec_depth(prs_struct *ps);
int prs_depth(prs_struct *ps);
void prs_set_side(prs_struct *ps, BOOL side);
void prs_mem_free(prs_struct *ps);
BOOL prs_append_some_prs_data(prs_struct *dst, prs_struct *src, int32 start,
			      uint32 len);
BOOL _prs_uint8(char *name, prs_struct *ps, int depth, uint8 *data8);
BOOL _prs_uint16(char *name, prs_struct *ps, int depth, uint16 *data16);
BOOL _prs_hash1(prs_struct *ps, uint32 offset, uint8 sess_key[16]);
BOOL _prs_uint32(char *name, prs_struct *ps, int depth, uint32 *data32);
BOOL _prs_uint8s(BOOL charmode, char *name, prs_struct *ps, int depth,
		 uint8 *data8s, int len);
BOOL _prs_uint16s(BOOL charmode, char *name, prs_struct *ps, int depth,
		  uint16 *data16s, int len);
BOOL _prs_uint32s(BOOL charmode, char *name, prs_struct *ps, int depth,
		  uint32 *data32s, int len);
BOOL _prs_buffer2(BOOL charmode, char *name, prs_struct *ps, int depth,
		  BUFFER2 * str);
BOOL _prs_string2(BOOL charmode, char *name, prs_struct *ps, int depth,
		  STRING2 * str);
BOOL _prs_unistr2(BOOL charmode, char *name, prs_struct *ps, int depth,
		  UNISTR2 *str);
BOOL prs_unistr3(BOOL charmode, char *name, UNISTR3 * str,
		 prs_struct *ps, int depth);
BOOL _prs_unistr(char *name, prs_struct *ps, int depth, UNISTR * str);
BOOL _prs_string(char *name, prs_struct *ps, int depth, char *str,
		 uint16 len, uint16 max_buf_size);
BOOL _prs_uint16_pre(char *name, prs_struct *ps, int depth, uint16 *data16,
		     uint32 *offset);
BOOL _prs_uint16_post(char *name, prs_struct *ps, int depth, uint16 *data16,
		      uint32 ptr_uint16, uint32 start_offset);
BOOL _prs_uint32_pre(char *name, prs_struct *ps, int depth, uint32 *data32,
		     uint32 *offset);
BOOL _prs_uint32_post(char *name, prs_struct *ps, int depth, uint32 *data32,
		      uint32 ptr_uint32, uint32 data_size);

/*The following definitions come from  libsmb/smbdes.c  */

void smbhash(uchar *out, const uchar *in, const uchar *key, int forw);
void E_P16(uchar *p14,uchar *p16);
void E_P24(const uchar *p21, const uchar *c8, uchar *p24);
void D_P16(const uchar *p14, const uchar *in, uchar *out);
void E_old_pw_hash( const uchar *p14, const uchar *in, uchar *out);
void cred_hash1(uchar *out, const uchar *in, const uchar *key);
void cred_hash2(uchar *out,uchar *in,uchar *key);
void cred_hash3(uchar *out, const uchar *in,uchar *key, int forw);
void SamOEMhash( uchar *data, const uchar *key, int val);
void sam_pwd_hash(unsigned int rid, const uchar *in, uchar *out, int forw);

/*The following definitions come from  lib/md4.c  */

void mdfour(unsigned char *out, const unsigned char *in, int n);

/*The following definitions come from  parse_net.c  */

BOOL net_io_user_info3(const char *, NET_USER_INFO_3 *, prs_struct *, int);

#endif /* _LIB_SMB_PROTO_H_ */
