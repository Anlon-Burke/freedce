dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/exc_handling.c)
AM_CONFIG_HEADER(include/dce/dcethreads_conf.h)
AM_INIT_AUTOMAKE(dcethreads, 2.0.3)
AC_PREFIX_DEFAULT(/opt/dce)

dnl Checks for programs.
AM_PROG_LIBTOOL
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for libraries.
AC_CHECK_LIB(pthread, pthread_create)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h malloc.h sys/time.h unistd.h features.h sys/cdefs.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_CHECK_TYPES(ssize_t)

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(gettimeofday)

AC_DEFINE(YIELD_AFTER_PTHREAD_CREATE)

dnl check if glibc functions are true cancellation points
dnl

AC_MSG_CHECKING([POSIX cancellation point]); 
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <pthread.h>
#include <unistd.h>
#include <errno.h>
#include <time.h>
#include <stdlib.h>
#include <assert.h>

int eintr=0; 

void*
thread(void* unused)
{
  struct timespec req={5,0}, rem; 
  int    status; 

  do {
    status = nanosleep(&req, &rem);
  }
  while (status!=-1);
  
  eintr = (errno==EINTR);
  pthread_exit (NULL);
}

int
main()
{
  pthread_t thrid; 

  assert (pthread_create(&thrid, NULL, thread, NULL)==0);
  sleep(1);
  assert (pthread_cancel (thrid)==0);
  sleep(1);
  exit (eintr);
}
]])],
	[AC_MSG_RESULT([yes]) ],
	[AC_MSG_RESULT([no]) AC_DEFINE(USE_CANCELATION_WRAPPER, 1)]	
)

AC_OUTPUT(Makefile include/Makefile include/dce/Makefile src/Makefile tests/Makefile)
