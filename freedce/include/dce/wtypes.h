/* Generated by IDL compiler version FreeDCE 1.0.1 64-bit with GNU Flex/Bison */
#ifndef FreeDCEORPCTypes_v0_0_included
#define FreeDCEORPCTypes_v0_0_included
#ifndef IDL_DOUBLE_USED
#define IDL_DOUBLE_USED
#endif
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
typedef void VOID;
typedef idl_void_p_t HANDLE;
typedef idl_void_p_t HMODULE;
typedef idl_void_p_t HINSTANCE;
typedef idl_void_p_t LPVOID;
typedef idl_void_p_t PVOID;
typedef idl_long_int INT;
typedef idl_ulong_int UINT;
typedef idl_ulong_int *WPARAM;
typedef idl_long_int BOOL;
typedef idl_boolean BOOLEAN;
typedef idl_char UCHAR;
typedef idl_short_int SHORT;
typedef idl_ushort_int USHORT;
typedef USHORT *PUSHORT;
typedef idl_long_float DOUBLE;
typedef idl_ushort_int WORD;
typedef WORD *LPWORD;
typedef idl_ulong_int DWORD;
typedef DWORD *LPDWORD;
typedef idl_ulong_int ULONG;
typedef ULONG *PULONG;
typedef idl_long_int LONG;
typedef LONG *PLONG;
typedef idl_hyper_int LARGE_INTEGER;
typedef LARGE_INTEGER *PLARGE_INTEGER;
typedef idl_uhyper_int ULARGE_INTEGER;
typedef ULARGE_INTEGER *PULARGE_INTEGER;
typedef idl_char CHAR;
typedef CHAR *LPCH;
typedef CHAR *PCH;
typedef CHAR *LPSTR;
typedef CHAR *PSTR;
typedef idl_usmall_int BYTE;
typedef idl_ushort_int WCHAR;
typedef WCHAR *LPWCH;
typedef WCHAR *PWCH;
typedef WCHAR *LPWSTR;
typedef WCHAR *PWSTR;
typedef WCHAR TCHAR;
typedef TCHAR *PTCHAR;
typedef WCHAR TBYTE;
typedef TBYTE *PTBYTE;
typedef LPWSTR LPTCH;
typedef LPTCH PTCH;
typedef LPWSTR PTSTR;
typedef PTSTR LPTSTR;
typedef LPWSTR LP;
typedef INT HFILE;
typedef ULONG HRESULT;
typedef struct  {
DWORD low;
DWORD high;
} FILETIME;
typedef struct  {
ULONG size;
BYTE *data;
} BLOB;
typedef BLOB *LPBLOB;
typedef struct _GUID {
idl_ulong_int Data1;
idl_ushort_int Data2;
idl_ushort_int Data3;
idl_char Data4[8];
} GUID;
typedef GUID IID;
typedef GUID CLSID;
typedef GUID FMTID;
typedef GUID *REFGUID;
typedef GUID *LPGUID;
typedef GUID *REFCLSID;
typedef GUID *LPCLSID;
typedef GUID *REFIID;
typedef GUID *LPIID;
typedef GUID *REFFMTID;
typedef GUID *LPFMTID;
#define MEMCTX_TASK (0x1)
#define MEMCTX_SHARED (0x2)
#define MEMCTX_MACSYSTEM (0x3)
#define MEMCTX_UNKNOWN (0xffffffff)
#define MEMCTX_SAME (0xfffffffe)
typedef enum {CLSCTX_INPROC_SERVER = 1,
CLSCTX_INPROC_HANDLER = 2,
CLSCTX_LOCAL_SERVER = 4,
CLSCTX_INPROC_SERVER16 = 8,
CLSCTX_REMOTE_SERVER = 16,
CLSCTX_INPROC_HANDLER16 = 32,
CLSCTX_INPROC_SERVERX86 = 64,
CLSCTX_INPROC_HANDLERX86 = 128,
CLSCTX_ESERVER_HANDLER = 256} CLSCTX;
typedef enum {MSHLFLAGS_NORMAL = 0,
MSHLFLAGS_TABLESTRONG = 1,
MSHLFLAGS_TABLEWEAK = 2,
MSHLFLAGS_NOPING = 4} MSHLFLAGS;
typedef enum {MSHCTX_LOCAL = 0,
MSHCTX_NOSHAREDMEM = 1,
MSHCTX_DIFFERENTMACHINE = 2,
MSHCTX_INPROC = 3} MSHCTX;
void HANDLE_rundown(
#ifdef IDL_PROTOTYPES
    rpc_ss_context_t context_handle
#endif
);
void HMODULE_rundown(
#ifdef IDL_PROTOTYPES
    rpc_ss_context_t context_handle
#endif
);
void HINSTANCE_rundown(
#ifdef IDL_PROTOTYPES
    rpc_ss_context_t context_handle
#endif
);

#ifdef __cplusplus
    }
#endif

#endif
