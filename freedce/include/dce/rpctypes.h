/* Generated by IDL compiler */
#ifndef rpctypes_v0_0_included
#define rpctypes_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
typedef struct  {
uuid_t uuid;
unsigned16 vers_major;
unsigned16 vers_minor;
} rpc_if_id_t;
typedef rpc_if_id_t *rpc_if_id_p_t;
typedef struct  {
unsigned32 count;
rpc_if_id_p_t if_id[1];
} rpc_if_id_vector_t;
typedef rpc_if_id_vector_t *rpc_if_id_vector_p_t;
#define rpc_c_vers_all (0x1)
#define rpc_c_vers_compatible (0x2)
#define rpc_c_vers_exact (0x3)
#define rpc_c_vers_major_only (0x4)
#define rpc_c_vers_upto (0x5)
#define rpc_c_stats_calls_in (0x0)
#define rpc_c_stats_calls_out (0x1)
#define rpc_c_stats_pkts_in (0x2)
#define rpc_c_stats_pkts_out (0x3)
#define rpc_c_stats_array_max_size (0x4)
typedef struct  {
unsigned32 count;
unsigned32 stats[1];
} rpc_stats_vector_t;
typedef rpc_stats_vector_t *rpc_stats_vector_p_t;
#define rpc_c_ep_all_elts (0x0)
#define rpc_c_ep_match_by_if (0x1)
#define rpc_c_ep_match_by_obj (0x2)
#define rpc_c_ep_match_by_both (0x3)

#ifdef __cplusplus
    }
#endif

#endif
