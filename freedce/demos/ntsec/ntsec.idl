/* 
   FreeDCE / TNG NT Security Descriptor implementation.
   Version 0.0

   Copyright (C) Luke Kenneth Casson Leighton 1996-2001,
   Copyright (C) Andrew Tridgell              1992-2000,
   Copyright (C) Jean Francois Micouleau      1998-2000.
   Copyright (C) other undeclared and unknown authors [contact me!]

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/


[pointer_default(ptr)] interface ntsec
{

/* Generic access masks & rights. */
const unsigned long SPECIFIC_RIGHTS_MASK = 0x0000FFFF;
const unsigned long STANDARD_RIGHTS_MASK = 0x00FF0000;
const unsigned long DELETE_ACCESS        = 0x00010000;
const unsigned long READ_CONTROL_ACCESS  = 0x00020000;
const unsigned long WRITE_DAC_ACCESS     = 0x00040000;
const unsigned long WRITE_OWNER_ACCESS   = 0x00080000;
const unsigned long SYNCHRONIZE_ACCESS   = 0x00100000;


const unsigned long SYSTEM_SECURITY_ACCESS = 0x01000000;
const unsigned long MAXIMUM_ALLOWED_ACCESS = 0x02000000;
const unsigned long GENERIC_ALL_ACCESS     = 0x08000000;
const unsigned long GENERIC_EXECUTE_ACCESS = 0x10000000;
const unsigned long GENERIC_WRITE_ACCESS   = 0x20000000;
const unsigned long GENERIC_READ_ACCESS    = 0x40000000;

const unsigned long STANDARD_RIGHTS_READ		= READ_CONTROL_ACCESS;
const unsigned long STANDARD_RIGHTS_WRITE		= STANDARD_RIGHTS_READ;
const unsigned long STANDARD_RIGHTS_EXECUTE		= STANDARD_RIGHTS_READ;
const unsigned long STANDARD_RIGHTS_REQUIRED	= 0x000F0000;

/* security descriptor specific access masks and rights */

const unsigned long SEC_RIGHTS_QUERY_VALUE      = 0x00000001;
const unsigned long SEC_RIGHTS_SET_VALUE        = 0x00000002;
const unsigned long SEC_RIGHTS_CREATE_SUBKEY    = 0x00000004;
const unsigned long SEC_RIGHTS_ENUM_SUBKEYS     = 0x00000008;
const unsigned long SEC_RIGHTS_NOTIFY           = 0x00000010;
const unsigned long SEC_RIGHTS_CREATE_LINK      = 0x00000020;
const unsigned long SEC_RIGHTS_DELETE           = DELETE_ACCESS;
const unsigned long SEC_RIGHTS_READ_CONTROL     = READ_CONTROL_ACCESS;
const unsigned long SEC_RIGHTS_WRITE_DAC        = WRITE_DAC_ACCESS;
const unsigned long SEC_RIGHTS_WRITE_OWNER      = WRITE_OWNER_ACCESS;
const unsigned long SEC_RIGHTS_MAXIMUM_ALLOWED  = MAXIMUM_ALLOWED_ACCESS;

const unsigned long SEC_RIGHTS_READ             = (SEC_RIGHTS_READ_CONTROL|
						SEC_RIGHTS_ENUM_SUBKEYS|
						SEC_RIGHTS_QUERY_VALUE);

const unsigned long SEC_RIGHTS_FULL_CONTROL     = (SEC_RIGHTS_QUERY_VALUE |
                                   SEC_RIGHTS_SET_VALUE        |
                                   SEC_RIGHTS_CREATE_SUBKEY    |
                                   SEC_RIGHTS_ENUM_SUBKEYS     |
                                   SEC_RIGHTS_NOTIFY           |
                                   SEC_RIGHTS_CREATE_LINK      |
                                   SEC_RIGHTS_DELETE           |
                                   SEC_RIGHTS_READ_CONTROL     |
                                   SEC_RIGHTS_WRITE_DAC        |
                                   SEC_RIGHTS_WRITE_OWNER);


/* ACE and Security Descriptor constants */

const unsigned small SEC_ACE_TYPE_ACCESS_ALLOWED	  = 0x0;
const unsigned small SEC_ACE_TYPE_ACCESS_DENIED	  = 0x1;
const unsigned small SEC_ACE_TYPE_SYSTEM_AUDIT	  = 0x2;
const unsigned small SEC_ACE_TYPE_SYSTEM_ALARM	  = 0x3;

const unsigned small SEC_ACE_FLAG_OBJECT_INHERIT	  = 0x1;
const unsigned small SEC_ACE_FLAG_CONTAINER_INHERIT	  = 0x2;
const unsigned small SEC_ACE_FLAG_NO_PROPAGATE_INHERIT	  = 0x4;
const unsigned small SEC_ACE_FLAG_INHERIT_ONLY	     = 0x8;
const unsigned small SEC_ACE_FLAG_INHERITED_ACE	  = 0x10; /* New for Windows 2000 */
const unsigned small SEC_ACE_FLAG_VALID_INHERIT	     = 0x0f;
const unsigned small SEC_ACE_FLAG_SUCCESSFUL_ACCESS  = 0x40;
const unsigned small SEC_ACE_FLAG_FAILED_ACCESS	     = 0x80;

const unsigned short SEC_DESC_OWNER_DEFAULTED	  = 0x0001;
const unsigned short SEC_DESC_GROUP_DEFAULTED	  = 0x0002;
const unsigned short SEC_DESC_DACL_PRESENT	  = 0x0004;
const unsigned short SEC_DESC_DACL_DEFAULTED	  = 0x0008;
const unsigned short SEC_DESC_SACL_PRESENT	  = 0x0010;
const unsigned short SEC_DESC_SACL_DEFAULTED	  = 0x0020;
/*
 * New Windows 2000 bits.
 */
const unsigned short SE_DESC_DACL_AUTO_INHERIT_REQ   = 0x0100;
const unsigned short SE_DESC_SACL_AUTO_INHERIT_REQ   = 0x0200;
const unsigned short SE_DESC_DACL_AUTO_INHERITED   = 0x0400;
const unsigned short SE_DESC_SACL_AUTO_INHERITED   = 0x0800;
const unsigned short SE_DESC_DACL_PROTECTED		  = 0x1000;
const unsigned short SE_DESC_SACL_PROTECTED		  = 0x2000;

const unsigned short SEC_DESC_SELF_RELATIVE		  = 0x8000;

/* security information */

const unsigned long OWNER_SECURITY_INFORMATION   = 0x00000001;
const unsigned long GROUP_SECURITY_INFORMATION   = 0x00000002;
const unsigned long DACL_SECURITY_INFORMATION    = 0x00000004;
const unsigned long SACL_SECURITY_INFORMATION    = 0x00000008;

const unsigned long ALL_SECURITY_INFORMATION = (OWNER_SECURITY_INFORMATION|
                                                GROUP_SECURITY_INFORMATION| 
                                                DACL_SECURITY_INFORMATION|
                                                SACL_SECURITY_INFORMATION);


const unsigned short NT4_ACL_REVISION   = 0x2;
const unsigned short ACL_REVISION   = 0x3;

const unsigned short SEC_DESC_REVISION   = 0x1;

}

