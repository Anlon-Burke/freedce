dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/netlogon.idl)
echo "/* generated by configure */" > include/netlogonconfig.h.in
AM_CONFIG_HEADER(include/netlogonconfig.h)
AC_CANONICAL_SYSTEM

# reduce iX86 to i386 for target_cpu
case $target_cpu in
	i?86)	target_cpu="i386";;
esac
AC_SUBST(target_cpu)
AC_SUBST(target_os)

AM_INIT_AUTOMAKE(netlogon, 1.0)
AC_PREFIX_DEFAULT(/usr/local/netlogon)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_AWK
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LEX
AC_PROG_YACC
AC_PATH_PROG(GENCAT, gencat)
AC_PATH_PROG(SED, sed)
AC_SUBST(GENCAT)
AC_SUBST(SED)
AC_OBJEXT
AC_C_INLINE
RPC_C_UNUSED

dnl Checks for libraries.
AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(dl, dlopen)

DCE_DIRS="/opt/dce"
AC_ARG_WITH(dce-dir, [  --with-dce-dir   Specify where you have installed FreeDCE],
[DCE_DIRS="$withval $DCE_DIRS"])

RPC_CHECK_LIBDIR(uuid_create, uuid, $DCE_DIRS,,
AC_MSG_ERROR([we require libuuid]))

RPC_CHECK_LIBDIR(rpc_ss_allocate, dcerpc, $DCE_DIRS,,
AC_MSG_ERROR([we require libdcerpc]))

IDL_CFLAGS="-D_GNU_SOURCE -D_REENTRANT"
AC_SUBST(IDL_CFLAGS)

RPC_CHECK_LIBDIR(pthd4exc_create, dcethreads, $DCE_DIRS,,
AC_MSG_ERROR([we require libdcethreads]))

dnl Checks for header files.
AC_CHECK_HEADERS(features.h sys/cdefs.h dlfcn.h)

RPC_CHECK_INCDIR(dce/winerror.h, dcerpc, $DCE_DIRS,,
AC_MSG_ERROR([netlogon requires FreeDCE include files]))
DCEINCLUDES="${rpc_incdir_dcerpc+-I$rpc_incdir_dcerpc -I$rpc_incdir_dcerpc/dce}"
AC_SUBST(DCEINCLUDES)

#RPC_CHECK_INCDIR(dce/pthread_exc.h, dcethreads, $DCE_DIRS,,
#AC_MSG_ERROR([netlogon requires dcethreads include files]))

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP

dnl _GNU_SOURCE pulls in the definition of _pthread_push_defer
AC_DEFINE([DEBUG], [], [Debug Mode])
AC_DEFINE([_REENTRANT], 1, Ask for re-entrant api)
AC_DEFINE([_GNU_SOURCE], 1, Ask for GNU extensions)
AC_DEFINE([_POSIX_SOURCE], 1, Ask for POSIX extensions)
AC_DEFINE([_BSD], 1, Tell libc that we want BSD things)

dnl This allows us to re-use AC_OUTPUT which makes things more maintainable
dnl and helps us to use automake nicely.
dnl it is defined here and not in acinclude.m4 because acgeneral.m4 gets
dnl parsed AFTER acinclude.m4
pushdef([AC_OUTPUT], 
[define([RPC_OUTPUT_FILES], ifdef([RPC_OUTPUT_FILES], RPC_OUTPUT_FILES ,)[$1])]
)

RPC_ARG_DEFINE(debug, DEBUG, yes,Compile with debugging support)

AM_CONDITIONAL(TARGET_OS_LINUX, test x$target_os = xlinux-gnu)

sinclude(include/config.m4)
sinclude(lib/config.m4)
sinclude(libexec/config.m4)
sinclude(bin/config.m4)

AC_OUTPUT(Makefile config.mk)

dnl restore original AC_OUTPUT definition
popdef([AC_OUTPUT])

dnl call AC_OUTPUT with the list of files we accumulated.
dnl automake will complain about RPC_OUTPUT_FILES.in, so
dnl we include a dummy file to keep it quiet.
AC_OUTPUT(RPC_OUTPUT_FILES)

