# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


#include $(top_builddir)/config.mk


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AS = @AS@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
DCETHREADINCLUDES = @DCETHREADINCLUDES@
DLLTOOL = @DLLTOOL@
LD = @LD@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
NM = @NM@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@
YACC = @YACC@
target_cpu = @target_cpu@
target_os = @target_os@

dce_includes = -I$(top_srcdir)/include $(DCETHREADINCLUDES)

CFLAGS = -g -Wall -W -O -pipe -Werror -DMIA
INCLUDES =  $(dce_includes)

SUFFIXES = .idl

IDL = $(top_builddir)/idl/idl
IDL_INCLUDE_DIR = $(top_srcdir)/include/dce

IDLFLAGS = -cepv -client none -server none -I$(IDL_INCLUDE_DIR)/..
NCK_IDLFLAGS = -keep object -no_cpp -v -no_mepv -I$(IDL_INCLUDE_DIR)/.. -I$(top_srcdir)/include $(DCETHREADINCLUDES) $(TARGET_OS)

#	This Makefile builds the IDL compiler

# configure/automake adds the dcethread library to everything that is built in
# this package.  Most things need it, but the idl compiler doesn't, so we
# remove the dcethread library from LIBS here.  You might not expect
# -ldcethread to stick during linking, but it does because it includes
# implementations of some io functions.
LIBS := $(subst -ldcethread,,$(LIBS))

bin_PROGRAMS = idl

idl_SOURCES = acf_y.y acf_l.l nidl_y.y nidl_l.l astp_com.c astp_cpx.c 	astp_gbl.c astp_sim.c astp_dmp.c checker.c chkichar.c command.c 	driver.c errors.c files.c frontend.c getflags.c keywds.c main.c 	message.c nametbl.c namdump.c propagat.c sysdep.c mtsbacke.c 	ddbe.c ddspell.c cspeldcl.c cspell.c cstubmts.c hdgen.c clihamts.c 	mtspipes.c irepgen.c irepscp.c ifspemts.c sstubmts.c comstmts.c 	user_exc.c icharsup.c


noinst_HEADERS = acf.h ast.h astp.h astp_dmp.h backend.h be_pvt.h bedeck.h  checker.h chkichar.h clihamts.h clihandl.h command.h commstat.h cspeldcl.h  cspell.h cstubgen.h cstubmts.h ddbe.h default_msg.h driver.h dutils.h  errors.h fe_pvt.h files.h flex_bison_support.h frontend.h genpipes.h  getflags.h hdgen.h icharsup.h ifspec.h ir_pvt.h irep.h marshall.h  message.h mtsbacke.h mtspipes.h nametbl.h namtbpvt.h nidl.h nidlmsg.h  propagat.h sstubmts.h sysdep.h user_exc.h


BUILT_SOURCES = acf_y.c acf_l.c nidl_y.c nidl_l.c acf_y.h nidl_y.h

# Ensure that YACC/LEX generated files go away during clean
CLEANFILES = acf_y.o acf_y.c acf_l.o acf_l.c acf_y.h nidl_y.o nidl_y.c nidl_l.o nidl_l.c nidl_y.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
idl_OBJECTS =  acf_y.o acf_l.o nidl_y.o nidl_l.o astp_com.o astp_cpx.o \
astp_gbl.o astp_sim.o astp_dmp.o checker.o chkichar.o command.o \
driver.o errors.o files.o frontend.o getflags.o keywds.o main.o \
message.o nametbl.o namdump.o propagat.o sysdep.o mtsbacke.o ddbe.o \
ddspell.o cspeldcl.o cspell.o cstubmts.o hdgen.o clihamts.o mtspipes.o \
irepgen.o irepscp.o ifspemts.o sstubmts.o comstmts.o user_exc.o \
icharsup.o
idl_LDADD = $(LDADD)
idl_DEPENDENCIES = 
idl_LDFLAGS = 
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LEXLIB = @LEXLIB@
YLWRAP = $(srcdir)/ylwrap
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in acf_l.c acf_y.c nidl_l.c nidl_y.c \
ylwrap


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/acf_l.P .deps/acf_y.P .deps/astp_com.P \
.deps/astp_cpx.P .deps/astp_dmp.P .deps/astp_gbl.P .deps/astp_sim.P \
.deps/checker.P .deps/chkichar.P .deps/clihamts.P .deps/command.P \
.deps/comstmts.P .deps/cspeldcl.P .deps/cspell.P .deps/cstubmts.P \
.deps/ddbe.P .deps/ddspell.P .deps/driver.P .deps/errors.P \
.deps/files.P .deps/frontend.P .deps/getflags.P .deps/hdgen.P \
.deps/icharsup.P .deps/ifspemts.P .deps/irepgen.P .deps/irepscp.P \
.deps/keywds.P .deps/main.P .deps/message.P .deps/mtsbacke.P \
.deps/mtspipes.P .deps/namdump.P .deps/nametbl.P .deps/nidl_l.P \
.deps/nidl_y.P .deps/propagat.P .deps/sstubmts.P .deps/sysdep.P \
.deps/user_exc.P
SOURCES = $(idl_SOURCES)
OBJECTS = $(idl_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .idl .l .lo .o .s .y
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/include.mk
	cd $(top_srcdir) && $(AUTOMAKE) --gnu idl/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

idl: $(idl_OBJECTS) $(idl_DEPENDENCIES)
	@rm -f idl
	$(LINK) $(idl_LDFLAGS) $(idl_OBJECTS) $(idl_LDADD) $(LIBS)
.l.c:
	$(SHELL) $(YLWRAP) "$(LEX)" $< $(LEX_OUTPUT_ROOT).c $@ -- $(AM_LFLAGS) $(LFLAGS)
.y.c:
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $*.c y.tab.h $*.h -- $(AM_YFLAGS) $(YFLAGS)
acf_y.h: acf_y.c
nidl_y.h: nidl_y.c


tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = idl

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu idl/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "acf_llnidl_llacf_yhacf_ycnidl_yhnidl_yc$(BUILT_SOURCES)" || rm -f acf_ll nidl_ll acf_yh acf_yc nidl_yh nidl_yc $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# The return code of the IDL compiler is ignored so that we can "build" in the
# include directory on pass 1 (this creates osdep symlinks) and on pass 2
# (after the IDL compiler has been built) we can generate headers.
%.h: %.idl
	-$(IDL) $(IDLFLAGS) -no_mepv $<

# Override the standard YACC/LEX rules so we can build two scanners into
# the idl compiler.

acf_y.c acf_y.h:	acf_y.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/acf_y.y y.tab.c acf_y.c y.tab.h acf_y.h -- $(AM_YFLAGS) $(YFLAGS) -p acf_yy -d

acf_l.c: acf_l.l
	$(SHELL) $(YLWRAP) "$(LEX)" $(srcdir)/acf_l.l $(LEX_OUTPUT_ROOT).c acf_l.c -- $(AM_LFLAGS) $(LFLAGS) -Pacf_yy -o$(LEX_OUTPUT_ROOT).c

nidl_y.c nidl_y.h: nidl_y.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/nidl_y.y y.tab.c nidl_y.c y.tab.h nidl_y.h -- $(AM_YFLAGS) $(YFLAGS) -p nidl_yy -d

nidl_l.c: nidl_l.l
	$(SHELL) $(YLWRAP) "$(LEX)" $(srcdir)/nidl_l.l $(LEX_OUTPUT_ROOT).c nidl_l.c -- $(AM_LFLAGS) $(LFLAGS) -Pnidl_yy -o$(LEX_OUTPUT_ROOT).c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
